name: Build Daily

on  :
  ## Comment the entries below you won't be needing
  #  (and double-check if you repo uses 'main' or 'master')
  #push        :
  #  branches:
  #  - main
    #paths:
    #- 'xyz/**'
    #paths-ignore:
    #- '.github/**'
  #pull_request:
  #  branches:
  #  - main
    #paths:
    #- 'xyz/**'
    #paths-ignore:
    #- '.github/**'
  schedule    :
  - cron: '45 6 * * *'

  ## Uncomment and adapt the following lines to trigger the action upon complete of another
  ##
  #workflow_run:
  #  workflows:
  #    - 'main.yml'
  #  types:
  #    - completed

  workflow_dispatch:
  ## Uncomment the following lines if you need to provide specific inputs
  ##
  #  inputs:
  #    inputOne:
  #      description: 'Sample input to use'
  #      required   : true
  #      default    : 'some value'

jobs:
  build-nightly:
    runs-on: ubuntu-latest 
    permissions:
      contents     : write
      pull-requests: write

    steps  :
    ## To use an input, if defined, just refer to ${{ github.event.inputs.inputOne }}

    ## This action will cache the OpenAF runtime used by openaf/ojob-action to avoid reinstalling 
    ## everytime the action is invoked. It should be cleared manually from time to time in order
    ## to use a more updated runtime.
    # --------------------------
    - name: Cache OpenAF runtime
      uses: actions/cache@v3
      with:
        key : oaf-nightly
        path: /tmp/oaf

    # --------------
    - name: Checkout
      uses: actions/checkout@v4
    
    # -----------------
    #- name: Set up QEMU
    #  uses: docker/setup-qemu-action@v2
    - name: Create folder
      run : |
        mkdir nightly

    ## Add here other steps
    ## If you used workflow_run you can access ${{ github.event.workflow }} and ${{ github.event.workflow_run.conclusion }}

    - name: Build nightly
      uses: openaf/ojob-action@v4
      env :
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        ojob: buildNightly.yaml
        dist: nightly

    # --------------------
    - name: Prepare output
      run : |
        mv nightly output

    # -----------------------
    - name: Copy build result
      uses: openaf/ojob-action@v4
      env :
        OS_OAFSH: ${{ secrets.OS_OAFSH }}
      with:
        dist  : nightly
        def   : |
          ojob:
            opacks: 
            - S3
          
          include: 
          - s3.yaml
            
          todo:
          - Copy build result
          
          jobs:
          - name: Copy build result
            to  :
            - (secget)  : OS_OAFSH
              ((secEnv)): true
            - name: S3 Sync folder
              args:
                squash   : remote
                localPath: output
                prefix   : nightly/
                bucket   : oafsh
                execute  : true


  build-t8:
    runs-on: ubuntu-latest 
    permissions:
      contents     : write
      pull-requests: write

    steps  :
    ## To use an input, if defined, just refer to ${{ github.event.inputs.inputOne }}

    ## This action will cache the OpenAF runtime used by openaf/ojob-action to avoid reinstalling 
    ## everytime the action is invoked. It should be cleared manually from time to time in order
    ## to use a more updated runtime.
    # --------------------------
    - name: Cache OpenAF runtime
      uses: actions/cache@v3
      with:
        key : oaf-nightly
        path: /tmp/oaf

    # --------------
    - name: Checkout
      uses: actions/checkout@v4
    
    # -----------------
    #- name: Set up QEMU
    #  uses: docker/setup-qemu-action@v2
    - name: Create folder
      run : |
        mkdir t8

    ## Add here other steps
    ## If you used workflow_run you can access ${{ github.event.workflow }} and ${{ github.event.workflow_run.conclusion }}

    - name: Build T8
      uses: openaf/ojob-action@v4
      env :
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        ojob: buildT8.yaml
        dist: nightly

    # --------------------
    - name: Prepare output
      run : |
        mv t8 output

    # -----------------------
    - name: Copy build result
      uses: openaf/ojob-action@v4
      env :
        OS_OAFSH: ${{ secrets.OS_OAFSH }}
      with:
        dist  : nightly
        def   : |
          ojob:
            opacks: 
            - S3
          
          include: 
          - s3.yaml
            
          todo:
          - Copy build result
          
          jobs:
          - name: Copy build result
            to  :
            - (secget)  : OS_OAFSH
              ((secEnv)): true
            - name: S3 Sync folder
              args:
                squash   : remote
                localPath: output
                prefix   : t8/
                bucket   : oafsh
                execute  : true